- name: Set up a minion node on ubuntu
  vars_files: /srv/ansible/inventory/secrets.yaml
  hosts: all
  tasks:
    - name: change user password
      become: yes
      user: 
        name: sibelius
        password: "$6$.Yxlh5fN$xAz.hGQJ3iPUqn.b5mH3CA3cWWVnOJsNcYE.r9XxU7e9Dm99ItbUnemnfsV.cMpr5SJLLKCoKc3gfDCSN4Z3Y1"

    - name: Update password used
      set_fact: ansible_become_pass="MINION/Homelab@73"

    - name: update
      become: yes
      apt:
        update_cache: yes
    - name: upgrade
      become: yes
      apt:
        upgrade: full

    - name: adding pkg needed in order to add kubernetes & docker sources
      become: yes
      apt: 
        pkg:
        - apt-transport-https
        - curl
        - ca-certificates
        - lsb-release
        - gnupg

    - name: Add Docker's official apt key.
      become: yes
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        id: 9DC858229FC7DD38854AE2D88D81803C0EBFCD88
        state: present
      register: add_key
      ignore_errors: true

    - name: Add Docker stable repository.
      become: yes
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/{{ ansible_distribution|lower }} {{ ansible_distribution_release }} stable"
        state: present
        update_cache: yes

    - name: Add an apt signing key for Kubernetes
      become: yes
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: Adding apt repository for Kubernetes
      become: yes
      apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        filename: kubernetes.list

    - name: install kubernetes and docker pkg
      become: yes
      apt:
        update_cache: yes
        pkg:
        - kubelet
        - kubeadm
        - kubectl
        - docker-ce
        - docker-ce-cli
        - containerd.io
        - nfs-common

    - name: pin version of k8 packages
      become: yes
      dpkg_selections:
        name: '{{ item.name }}'
        selection: hold
      with_items:
        - name: kubeadm
        - name: kubectl
        - name: kubelet

    - name: Let iptables see bridged traffic
      become: yes
      copy:
        dest: /etc/sysctl.d/k8s.conf
        content: |
          net.bridge.bridge-nf-call-ip6tables = 1
          net.bridge.bridge-nf-call-iptables = 1
    - name: reload sysctl config
      command: sysctl --system

    - name: disable swap for current session
      become: yes
      command: swapoff -a

    - name: Disable swap permanently, persist reboots
      become: yes
      replace:
        path: /etc/fstab
        regexp: '^(\s*)([^#\n]+\s+)(\w+\s+)swap(\s+.*)$'
        replace: '#\1\2\3swap\4'
        backup: yes

    - name: Change docker cgroup driver to systemd #Kubernetes cgroup driver need to be the same as docker.
      become: yes
      copy:
        dest: "/etc/docker/daemon.json"
        content: |
          {
            "exec-opts": ["native.cgroupdriver=systemd"]
          }

    - name: start docker and kubernetes
      become: yes
      systemd:
        name: '{{ item.name }}'
        state: restarted
        enabled: yes
      with_items:
        - name: docker
        - name: kubelet
      
    - name: restart docker to apply the cgroup change #for some reason the task above wasn't cutting it even with the 'state: restarted', docker was still running the wrong cgroup, manual restart fixes it.
      become: yes
      command: systemctl restart docker
      
    - name: set up inbound firewall rules
      become: yes
      ufw:
        rule: allow
        direction: in
        src: 192.168.1.0/24 #Lan
        port: ' {{ item.port }}'
        proto: '{{ item.proto }}'
        comment: '{{ item.comment }}'
      with_items:
        - port: 22
          proto: 'tcp'
          comment: in allow ssh
        - port: 10250
          proto: 'tcp'
          comment: kubelet API
        - port: 30000:32767
          proto: 'tcp'
          comment: NodePort Services
        - port: 179
          proto: 'tcp'
          comment: Calico networking (BGP)
        - port: 4789
          proto: 'udp'
          comment: Calico networking with VXLAN enabled && flannel networking (VXLAN)
        - port: 2049
          proto: any
          comment: allow nfs

    - name: enable ufw and set default policy to deny
      become: yes
      ufw:
        state: enabled
        default: deny
    # - name: regex search in file
    #   local_action: shell grep -o '{{ filter1 }}' kube-token-out | {{ filter2 }}
    #   register: token_match
    # - name: calculate the sha256sum of the ca cert's public key
    #   shell: openssl x509 -in /etc/kubernetes/pki/ca.crt -noout -pubkey | openssl rsa -pubin -outform DER 2>/dev/null | sha256sum | cut -d' ' -f1
    #   register: sha256_sum

    # - name: join the k8 cluster
    #   become: yes
    #   command: |
    #     {{ token_match.stdout }} --discovery-token-ca-cert-hash sha256:{{ sha256_sum.stdout }}
    - name: stop the cloud-init unit
      become: yes
      systemd:
        name: cloud-init
        state: stopped
    - name: remove some cloud init files to reset state (1/2)
      become: yes
      file:
        path: '{{ item }}'
        state: absent
      with_items:
        - /var/lib/cloud
        - /run/cloud-init
    - name: clean cloud-init
      become: yes
      command: cloud-init clean
    - name: remove some cloud init file to reset state (2/2)
      become: yes
      file:
        path: '{{ item }}'
        state: absent
      with_items:
        - /etc/cloud/cloud.cfg.d/subiquity-disable-cloudinit-networking.cfg
        - /etc/cloud/cloud.cfg.d/99-installer.cfg